import tkinter as tk
from tkinter import filedialog
import os

from authorisation import (
    get_token
)

from functions import (
    search_for_artist,
    artist_check
)

files_window = False

def print_path():
    folder_path = filedialog.askdirectory()
    if folder_path:
        folder_label.config(text="Selected Folder Path: " + folder_path)

def open_folder_dialog():
    folder_path = filedialog.askdirectory()
    if folder_path:
        folder_label.config(text="Selected Folder Path: " + folder_path)

        if files_window:
            delete_window(files_window)

        new_window = tk.Toplevel(root)
        new_window.title(os.path.basename(folder_path))
        
        for file in os.listdir(folder_path):
            if file.endswith(".m4a"):
                label = tk.Label(new_window, text=file)
                label.pack()

def delete_window(files_window):
    if files_window:
        root.winfo_children()[-1].destroy()
        files_window = False

def convert():

    if folder_label.cget("text")=="No folder chosen":
        return
    
    folder_path = folder_label.cget("text")[22:]
    try:
        convert_m4a_to_mp3(folder_path)
    except Exception as e:
        print(f"An error occured: {e}")
    
    new_window = tk.Toplevel(root)
    finished_label = tk.Label(new_window, text="Finished")
    finished_label.pack()

def fetch_album_info():

    artist = artist_label.cget("text")[14:]

    if artist_check(artist):
        print(artist, "already done.")
    else:
        print("Fetching:", artist)

def find_artist():
    artist = artist_entry.get()

    artist = search_for_artist(token, artist)["name"]

    artist_label.config(text="Artist found: " + artist)

# token
token = get_token()

# root window
root = tk.Tk()
root.title("Music Project")
root.geometry("800x300")

# file conversion
fileconversion_label = "FETCH ARTIST'S ALBUM INFORMATION"
fileconversion_label = tk.Label(root, text=fileconversion_label)
fileconversion_label.pack()

chooseartist_label = "Choose artist: "
chooseartist_label = tk.Label(root, text=chooseartist_label)
chooseartist_label.pack()

artist_entry = tk.Entry(root)
artist_entry.pack()

search_button = tk.Button(root, text="Search", command=find_artist)
search_button.pack(pady=20)

artist_label = "No artist chosen"
artist_label = tk.Label(root, text=artist_label)
artist_label.pack()

fetch_button = tk.Button(root, text="Fetch", command=fetch_album_info)
fetch_button.pack(pady=20)


# start main loop
root.mainloop()